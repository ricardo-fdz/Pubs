<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsddbConfiguracionAdmin.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JEmSBtlWW/1/2yR3Bx4EWO8AAAAASUVORK5CYII=
</value>
  </data>
</root>